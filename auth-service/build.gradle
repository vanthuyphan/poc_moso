buildscript {
    ext {
        springCloudVersion = 'Greenwich.M1'
    }
}

plugins {
    id 'org.springframework.boot' version '2.1.0.RELEASE'
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id 'com.palantir.docker' version '0.20.1'
}

apply plugin: 'java'

group = 'moso'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-data-redis')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.boot:spring-boot-starter-json')
    implementation('org.springframework.boot:spring-boot-starter-log4j2')
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework.cloud:spring-cloud-starter-consul-discovery')
    // See https://github.com/spring-projects/spring-security-oauth2-boot/issues/16
    implementation('org.springframework.security.oauth:spring-security-oauth2:2.3.4.RELEASE')
    implementation('org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure')
    implementation('redis.clients:jedis')
    implementation('org.liquibase:liquibase-core')
    runtime('org.postgresql:postgresql:42.2.5')
    compileOnly('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testRuntime('com.h2database:h2')
}

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        exclude group: 'ch.qos.logback', module: '*'
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

docker {
    dockerfile file('src/main/docker/Dockerfile')
    name "${project.property('docker.registry')}/moso-${project.name}:${project.version}"
    files jar.archivePath
    buildArgs(['JAR_FILE': "${jar.archiveName}"])
}
